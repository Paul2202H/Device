

on:
  push:
    branches:
      - 'twrp-13'
  workflow_dispatch:

jobs:
  build:
    name: Build TWRP by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    permissions:
      contents: write
    steps:
    - name: Check Out
      uses: actions/checkout@v4

    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 24

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libtinfo5 libgflags-dev
        sudo add-apt-repository universe
        sudo apt -y install libncurses5

    - name: Download Ubuntu ISO
      run: |
        wget -O ubuntu.iso <ISO_URL>
        echo "<expected-sha256>  ubuntu.iso" | sha256sum -c -

    - name: Mount ISO for verification
      run: |
        sudo mkdir -p /mnt/iso
        sudo mount -o loop ubuntu.iso /mnt/iso
        ls -l /mnt/iso
        sudo umount /mnt/iso

    # ... rest of your existing steps ...

    - name: Initialize Repo
      run: |
        mkdir twrp
        cd twrp
        git config --global user.name "Vale"
        git config --global user.email "hunterdemon2202@gmail.com"
        repo init --depth=1 -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git -b twrp-12.1
        repo sync -j$(nproc --all) --force-sync

    # ... continue with your build steps ...

    - name: Building Image
      run: |
        cd twrp
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch twrp_X6820-eng && make clean && make bootimage -j$(nproc --all)
        cd out/target/product/X6820
        mv boot.img twrp-boot-${{ github.run_id }}.img
        echo "Done building your twrp-boot-${{ github.run_id }}.img"
        
